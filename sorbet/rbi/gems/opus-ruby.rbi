# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/opus-ruby/all/opus-ruby.rbi
#
# opus-ruby-1.0.1
module Opus
  def opus_decode(*arg0); end
  def opus_decode_float(*arg0); end
  def opus_decoder_create(*arg0); end
  def opus_decoder_ctl(*args); end
  def opus_decoder_destroy(*arg0); end
  def opus_decoder_get_size(*arg0); end
  def opus_decoder_init(*arg0); end
  def opus_encode(*arg0); end
  def opus_encode_float(*arg0); end
  def opus_encoder_create(*arg0); end
  def opus_encoder_ctl(*args); end
  def opus_encoder_destroy(*arg0); end
  def opus_encoder_get_size(*arg0); end
  def opus_encoder_init(*arg0); end
  def self.opus_decode(*arg0); end
  def self.opus_decode_float(*arg0); end
  def self.opus_decoder_create(*arg0); end
  def self.opus_decoder_ctl(*args); end
  def self.opus_decoder_destroy(*arg0); end
  def self.opus_decoder_get_size(*arg0); end
  def self.opus_decoder_init(*arg0); end
  def self.opus_encode(*arg0); end
  def self.opus_encode_float(*arg0); end
  def self.opus_encoder_create(*arg0); end
  def self.opus_encoder_ctl(*args); end
  def self.opus_encoder_destroy(*arg0); end
  def self.opus_encoder_get_size(*arg0); end
  def self.opus_encoder_init(*arg0); end
  extend FFI::Library
end
class Opus::Encoder
  def bitrate; end
  def bitrate=(value); end
  def channels; end
  def destroy; end
  def encode(data, size); end
  def frame_size; end
  def initialize(sample_rate, frame_size, channels); end
  def reset; end
  def sample_rate; end
  def vbr_rate; end
  def vbr_rate=(value); end
end
class Opus::Decoder
  def channels; end
  def decode(data); end
  def destroy; end
  def frame_size; end
  def initialize(sample_rate, frame_size, channels); end
  def reset; end
  def sample_rate; end
end
module Opus::Constants
end
